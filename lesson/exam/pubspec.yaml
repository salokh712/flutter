name: exam
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.4.0 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  dio:
  http: ^1.2.2

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
# import 'package:flutter/material.dart';
# import 'country_service.dart';
# import 'country_model.dart';

# class TravelApp extends StatelessWidget {
#   final CountryService countryService = CountryService();

#   @override
#   Widget build(BuildContext context) {
#     return MaterialApp(
#       home: HomePage(countryService: countryService),
#     );
#   }
# }

# class HomePage extends StatefulWidget {
#   final CountryService countryService;

#   HomePage({required this.countryService});

#   @override
#   _HomePageState createState() => _HomePageState();
# }

# class _HomePageState extends State<HomePage> {
#   late Future<List<Country>> _countries;

#   @override
#   void initState() {
#     super.initState();
#     _countries = widget.countryService.fetchCountries();
#   }

#   @override
#   Widget build(BuildContext context) {
#     return Scaffold(
#       appBar: AppBar(
#         title: Text("Where do you want to travel?"),
#         actions: [
#           IconButton(
#             icon: Icon(Icons.search),
#             onPressed: () {},
#           ),
#         ],
#       ),
#       body: FutureBuilder<List<Country>>(
#         future: _countries,
#         builder: (context, snapshot) {
#           if (snapshot.connectionState == ConnectionState.waiting) {
#             return Center(child: CircularProgressIndicator());
#           } else if (snapshot.hasError) {
#             return Center(child: Text('Error: ${snapshot.error}'));
#           } else if (!snapshot.hasData || snapshot.data!.isEmpty) {
#             return Center(child: Text('No countries found'));
#           }

#           return ListView.builder(
#             scrollDirection: Axis.horizontal,
#             itemCount: snapshot.data!.length,
#             itemBuilder: (context, index) {
#               Country country = snapshot.data![index];
#               return Padding(
#                 padding: const EdgeInsets.all(8.0),
#                 child: GestureDetector(
#                   onTap: () {
#                     Navigator.push(
#                       context,
#                       MaterialPageRoute(
#                         builder: (context) => CountryDetailsPage(country: country),
#                       ),
#                     );
#                   },
#                   child: Container(
#                     width: 200, // Width of each item
#                     decoration: BoxDecoration(
#                       borderRadius: BorderRadius.circular(12),
#                       color: Colors.white,
#                       boxShadow: [
#                         BoxShadow(
#                           color: Colors.black12,
#                           blurRadius: 8,
#                           spreadRadius: 2,
#                         ),
#                       ],
#                     ),
#                     child: Column(
#                       crossAxisAlignment: CrossAxisAlignment.start,
#                       children: [
#                         ClipRRect(
#                           borderRadius: BorderRadius.circular(12),
#                           child: Image.network(
#                             country.imageUrl,
#                             height: 120,
#                             width: double.infinity,
#                             fit: BoxFit.cover,
#                           ),
#                         ),
#                         Padding(
#                           padding: const EdgeInsets.all(8.0),
#                           child: Column(
#                             crossAxisAlignment: CrossAxisAlignment.start,
#                             children: [
#                               Text(
#                                 country.name,
#                                 style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
#                               ),
#                               SizedBox(height: 4),
#                               Row(
#                                 mainAxisAlignment: MainAxisAlignment.spaceBetween,
#                                 children: [
#                                   Text('Rating: ${country.rating}'),
#                                   Icon(Icons.star, color: Colors.yellow),
#                                 ],
#                               ),
#                             ],
#                           ),
#                         ),
#                       ],
#                     ),
#                   ),
#                 ),
#               );
#             },
#           );
#         },
#       ),
#     );
#   }
# }

# class CountryDetailsPage extends StatelessWidget {
#   final Country country;

#   CountryDetailsPage({required this.country});

#   @override
#   Widget build(BuildContext context) {
#     return Scaffold(
#       appBar: AppBar(
#         title: Text(country.name),
#       ),
#       body: Padding(
#         padding: const EdgeInsets.all(16.0),
#         child: Column(
#           crossAxisAlignment: CrossAxisAlignment.start,
#           children: [
#             Image.network(country.imageUrl),  // New Image
#             SizedBox(height: 16.0),
#             Text(country.name, style: TextStyle(fontSize: 24)),
#             SizedBox(height: 8.0),
#             Text('Rating: ${country.rating}', style: TextStyle(fontSize: 16)),
#             SizedBox(height: 16.0),
#             Text(country.details),
#           ],
#         ),
#       ),
#     );
#   }
# }
